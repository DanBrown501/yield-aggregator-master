{"version":3,"sources":["logo.png","helpers/calculateAPY.js","components/Navbar.js","components/App.js","serviceWorker.js","index.js"],"names":["Web3","require","getCompoundAPY","cDAI_contract","a","ethMantissa","blocksPerDay","daysPerYear","methods","supplyRatePerBlock","call","compAPY","utils","toBN","Math","pow","getAaveAPY","aaveLendingPool_contract","getReserveData","currentLiquidityRate","aaveAPY","Navbar","className","href","target","rel","this","props","account","Component","App","state","web3","aggregator","dai_contract","dai_address","cDAI_address","aaveLendingPool_address","walletBalance","aggregatorBalance","activeProtocol","amountToDeposit","loading","depositHandler","bind","withdrawHandler","rebalanceHandler","loadWeb3","window","ethereum","enable","loadBlockchainData","dispatch","currentProvider","alert","setState","eth","net","getId","networkId","getAccounts","accounts","Contract","Aggregator","abi","networks","address","dai","DAI_ABI","cDAI_ABI","AAVE_ABI","loadAccountInfo","balanceOf","amountDeposited","fromWei","balanceWhere","Number","amount","toWei","toString","approve","_address","send","from","on","deposit","rebalance","withdraw","role","src","logo","alt","onSubmit","e","preventDefault","type","placeholder","onChange","value","onClick","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a7529621.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.4764d5b6.png\";","const Web3 = require('web3');\n\nexport const getCompoundAPY = async (cDAI_contract) => {\n    // Reference -> https://compound.finance/docs#protocol-math\n\n    const ethMantissa = 1e18\n    const blocksPerDay = 6570 // 13.15 seconds per block\n    const daysPerYear = 365\n\n    const supplyRatePerBlock = await cDAI_contract.methods.supplyRatePerBlock().call()\n    const compAPY = Web3.utils.toBN(((((Math.pow((supplyRatePerBlock / ethMantissa * blocksPerDay) + 1, daysPerYear))) - 1) * 100) * ethMantissa)\n\n    return compAPY\n}\n\nexport const getAaveAPY = async (aaveLendingPool_contract) => {\n\n    const DAI = '0x6b175474e89094c44da98b954eedeac495271d0f'\n\n    const { currentLiquidityRate } = await aaveLendingPool_contract.methods.getReserveData(DAI).call()\n    const aaveAPY = Web3.utils.toBN(currentLiquidityRate / 1e7)\n\n    return aaveAPY\n}","import React, { Component } from 'react';\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                <a\n                    className=\"navbar-brand col-sm-3 col-md-2 mr-0 mx-3\"\n                    href=\"http://www.dappuniversity.com/bootcamp\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Dapp University\n                </a>\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <a\n                            className=\"nav-link small mx-3\"\n                            href={`https://etherscan.io/address/${this.props.account}`}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            {this.props.account}\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n        )\n    }\n}\n\nexport default Navbar","import Web3 from 'web3'\n\nimport React, { Component } from 'react';\nimport logo from '../logo.png';\nimport './App.css';\n\nimport Aggregator from '../abis/Aggregator.json'\nimport DAI_ABI from '../helpers/dai-abi.json'\nimport cDAI_ABI from '../helpers/cDai-abi.json'\nimport AAVE_ABI from '../helpers/aaveLendingPool-abi.json'\nimport { getCompoundAPY, getAaveAPY } from '../helpers/calculateAPY'\n\n// Import components\nimport NavBar from './Navbar'\n\nclass App extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tweb3: null,\n\t\t\taggregator: null,\n\t\t\tdai_contract: null,\n\t\t\tdai_address: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n\t\t\tcDAI_contract: null,\n\t\t\tcDAI_address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\", // Address of Compound's cDAI\n\t\t\taaveLendingPool_contract: null,\n\t\t\taaveLendingPool_address: \"0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9\", // Address of aaveLendingPool\n\t\t\taccount: \"0x0\",\n\t\t\twalletBalance: \"0\",\n\t\t\taggregatorBalance: \"0\",\n\t\t\tactiveProtocol: \"None\",\n\t\t\tamountToDeposit: \"0\",\n\t\t\tloading: true\n\t\t};\n\n\t\t// Binding methods here\n\t\tthis.depositHandler = this.depositHandler.bind(this)\n\t\tthis.withdrawHandler = this.withdrawHandler.bind(this)\n\t\tthis.rebalanceHandler = this.rebalanceHandler.bind(this)\n\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.loadWeb3()\n\t}\n\n\tasync loadWeb3() {\n\t\tif (window.ethereum) {\n\n\t\t\twindow.web3 = new Web3(window.ethereum)\n\t\t\tawait window.ethereum.enable()\n\n\t\t\tthis.loadBlockchainData(this.props.dispatch)\n\n\t\t} else if (window.web3) {\n\t\t\twindow.web3 = new Web3(window.web3.currentProvider)\n\t\t} else {\n\t\t\twindow.alert('Non-ethereum browser detected.')\n\t\t}\n\t}\n\n\tasync loadBlockchainData(dispatch) {\n\t\tconst web3 = new Web3(window.ethereum)\n\t\tthis.setState({ web3 })\n\n\t\tconst networkId = await web3.eth.net.getId()\n\n\t\tconst accounts = await web3.eth.getAccounts()\n\t\tthis.setState({ account: accounts[0] })\n\n\t\tconst aggregator = new web3.eth.Contract(Aggregator.abi, Aggregator.networks[networkId].address)\n\n\t\tif (!aggregator) {\n\t\t\twindow.alert('Aggregator smart contract not detected on the current network. Please select another network with Metamask.')\n\t\t\treturn\n\t\t}\n\n\t\tthis.setState({ aggregator })\n\n\t\tconst dai = new web3.eth.Contract(DAI_ABI, this.state.dai_address)\n\n\t\tthis.setState({ dai })\n\n\t\tconst cDAI_contract = new web3.eth.Contract(cDAI_ABI, this.state.cDAI_address);\n\n\t\tthis.setState({ cDAI_contract })\n\n\t\tconst aaveLendingPool_contract = new web3.eth.Contract(AAVE_ABI, this.state.aaveLendingPool_address);\n\n\t\tthis.setState({ aaveLendingPool_contract })\n\n\t\tawait this.loadAccountInfo()\n\n\t}\n\n\tasync loadAccountInfo() {\n\n\t\tlet walletBalance = await this.state.dai.methods.balanceOf(this.state.account).call()\n\t\tlet aggregatorBalance = await this.state.aggregator.methods.amountDeposited().call()\n\n\t\twalletBalance = this.state.web3.utils.fromWei(walletBalance, 'ether')\n\t\taggregatorBalance = this.state.web3.utils.fromWei(aggregatorBalance, 'ether')\n\n\t\tthis.setState({ walletBalance })\n\t\tthis.setState({ aggregatorBalance })\n\n\t\tif (aggregatorBalance !== \"0\") {\n\n\t\t\tlet activeProtocol = await this.state.aggregator.methods.balanceWhere().call()\n\t\t\tactiveProtocol === this.state.cDAI_address ? this.setState({ activeProtocol: \"Compound\" }) : this.setState({ activeProtocol: \"Aave\" })\n\n\t\t} else {\n\t\t\tthis.setState({ activeProtocol: \"None\" })\n\t\t}\n\t}\n\n\tasync depositHandler() {\n\t\tif (this.state.walletBalance === \"0\") {\n\t\t\twindow.alert('No funds in wallet')\n\t\t\treturn\n\t\t}\n\n\t\tif (Number(this.state.amountToDeposit) > Number(this.state.walletBalance)) {\n\t\t\twindow.alert('Insufficient funds')\n\t\t\treturn\n\t\t}\n\n\t\tif (this.state.amountToDeposit <= 0) {\n\t\t\twindow.alert('Cannot be 0 or negative')\n\t\t\treturn\n\t\t}\n\n\t\tconst amount = this.state.web3.utils.toWei(this.state.amountToDeposit.toString(), 'ether')\n\t\tconst compAPY = await getCompoundAPY(this.state.cDAI_contract)\n\t\tconst aaveAPY = await getAaveAPY(this.state.aaveLendingPool_contract)\n\n\t\tthis.state.dai.methods.approve(this.state.aggregator._address, amount).send({ from: this.state.account })\n\t\t\t.on('transactionHash', () => {\n\t\t\t\tthis.state.aggregator.methods.deposit(\n\t\t\t\t\tamount, compAPY, aaveAPY\n\t\t\t\t).send({ from: this.state.account })\n\t\t\t\t\t.on('transactionHash', () => {\n\t\t\t\t\t\tthis.loadAccountInfo()\n\t\t\t\t\t})\n\t\t\t})\n\t}\n\n\tasync rebalanceHandler() {\n\t\tif (this.state.aggregatorBalance === \"0\") {\n\t\t\twindow.alert('No funds in contract')\n\t\t\treturn\n\t\t}\n\n\t\tconst compAPY = await getCompoundAPY(this.state.cDAI_contract)\n\t\tconst aaveAPY = await getAaveAPY(this.state.aaveLendingPool_contract)\n\n\t\tif ((compAPY > aaveAPY) && (this.state.activeProtocol === \"Compound\")) {\n\t\t\twindow.alert('Funds are already in the higher protocol')\n\t\t\treturn\n\t\t}\n\n\t\tif ((aaveAPY > compAPY) && (this.state.activeProtocol === \"Aave\")) {\n\t\t\twindow.alert('Funds are already in the higher protocol')\n\t\t\treturn\n\t\t}\n\n\t\tthis.state.aggregator.methods.rebalance(\n\t\t\tcompAPY,\n\t\t\taaveAPY\n\t\t).send({ from: this.state.account })\n\t\t\t.on('transactionHash', () => {\n\t\t\t\tthis.loadAccountInfo()\n\t\t\t})\n\t}\n\n\tasync withdrawHandler() {\n\t\tif (this.state.aggregatorBalance === \"0\") {\n\t\t\twindow.alert('No funds in contract')\n\t\t\treturn\n\t\t}\n\n\t\tthis.state.aggregator.methods.withdraw(\n\t\t).send({ from: this.state.account })\n\t\t\t.on('transactionHash', () => {\n\t\t\t\tthis.loadAccountInfo()\n\t\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<NavBar account={this.state.account} />\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<main role=\"main\" className=\"col-lg-12 text-center\">\n\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t<h1 className=\"my-5\">Yield Aggregator</h1>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\thref=\"http://www.dappuniversity.com/bootcamp\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"row content\">\n\t\t\t\t\t\t\t<div className=\"col user-controls\">\n\n\t\t\t\t\t\t\t\t<form onSubmit={(e) => {\n\t\t\t\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\t\t\t\tthis.depositHandler()\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<input type=\"number\" placeholder=\"Amount\" onChange={(e) => this.setState({ amountToDeposit: e.target.value })} />\n\t\t\t\t\t\t\t\t\t<button type=\"submit\">Deposit</button>\n\t\t\t\t\t\t\t\t</form>\n\n\t\t\t\t\t\t\t\t<button onClick={this.rebalanceHandler}>Rebalance</button>\n\n\t\t\t\t\t\t\t\t<button onClick={this.withdrawHandler}>Withdraw</button>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col user-stats\">\n\t\t\t\t\t\t\t\t<p>Current Wallet Balance (DAI): {this.state.walletBalance}</p>\n\t\t\t\t\t\t\t\t<p>Amount Deposited to Aggregator (DAI): {this.state.aggregatorBalance}</p>\n\t\t\t\t\t\t\t\t<p>Active Protocol: {this.state.activeProtocol}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</main>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}